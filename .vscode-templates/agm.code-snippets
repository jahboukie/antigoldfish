{
    "AGM Remember Command": {
        "prefix": "agm-remember",
        "body": [
            "agm remember \"$1\" --context \"$2\" --type \"$3\""
        ],
        "description": "AGM remember command with context and type"
    },
    "AGM Recall Command": {
        "prefix": "agm-recall",
        "body": [
            "agm recall \"$1\" --limit $2"
        ],
        "description": "AGM recall command with limit"
    },
    "AGM Status Command": {
        "prefix": "agm-status",
        "body": [
            "agm status"
        ],
        "description": "AGM status command"
    },
    "AGM Init Command": {
        "prefix": "agm-init",
        "body": [
            "agm init --force"
        ],
        "description": "AGM initialize project command"
    },
    "AGM Terminal Script": {
        "prefix": "agm-script",
        "body": [
            "#!/bin/bash",
            "# AGM Memory Script",
            "",
            "# Remember important project info",
            "agm remember \"$1\" --context \"${workspaceFolderBasename}\" --type \"script\"",
            "",
            "# Search for related memories",
            "agm recall \"$2\" --limit 10"
        ],
        "description": "AGM bash script template"
    },
    "AGM Package.json Scripts": {
        "prefix": "agm-package-scripts",
        "body": [
            "\"scripts\": {",
            "  \"agm:init\": \"agm init --force\",",
            "  \"agm:status\": \"agm status\",",
            "  \"agm:remember\": \"agm remember \\\"$1\\\" --context \\\"${workspaceFolderBasename}\\\"\",",
            "  \"agm:recall\": \"agm recall \\\"$2\\\" --limit 10\"",
            "}"
        ],
        "description": "AGM npm scripts for package.json"
    },
    "AGM Comment Block": {
        "prefix": "agm-comment",
        "body": [
            "/**",
            " * ðŸ§  AGM: $1",
            " * Context: $2",
            " * Purpose: $3",
            " * Commands: agm recall \"$4\"",
            " */"
        ],
        "description": "AGM comment block for documenting code"
    },
    "AGM README Section": {
        "prefix": "agm-readme",
        "body": [
            "## ðŸ§  AI Memory (AGM)",
            "",
            "This project uses AntiGoldfishMode for persistent AI memory.",
            "",
            "### Quick Commands:",
            "```bash",
            "agm init                    # Initialize AGM in project",
            "agm remember \"info\"        # Store information",
            "agm recall \"query\"         # Search memories",
            "agm status                  # Check system status",
            "```",
            "",
            "### VSCode Integration:",
            "- `Ctrl+Shift+M` - Remember selected text",
            "- `Ctrl+Shift+R` - Quick recall",
            "- `F1` â†’ Type 'AGM' for all commands",
            "",
            "Learn more: https://antigoldfish.dev"
        ],
        "description": "AGM README section template"
    },
    "AGM Environment Variables": {
        "prefix": "agm-env",
        "body": [
            "# AntiGoldfishMode Configuration",
            "AGM_CONTEXT=\"$1\"",
            "AGM_AUTO_REMEMBER=true",
            "AGM_DEFAULT_TYPE=\"$2\""
        ],
        "description": "AGM environment variables template"
    },
    "AGM Index Code": {
        "prefix": "agm-index",
        "body": [
            "agm index-code --path src --symbols"
        ],
        "description": "Index project source with symbol-aware chunking"
    },
    "AGM Search Code": {
        "prefix": "agm-search",
        "body": [
            "agm search-code \"$1\" --preview 5 --hybrid"
        ],
        "description": "Search indexed code"
    }
}